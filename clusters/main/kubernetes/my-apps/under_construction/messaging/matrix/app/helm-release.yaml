### Setup
# Set these in clusterenv.yaml
# I use openssl rand -base64 32 to generate tokens
# NFS_MATRIX_DATA: /mnt/vault/app-configs/matrix/data
# MATRIX_REG_SECRET: RANDOM_TOKEN
# MATRIX_MACAROON_SECRET: RANDOM_TOKEN
# POSTGRES_PASWORD: Password you'd like to use for your postgress db
#
# After successful boot Run the below command to generate your admin user.
# kubectl -n social exec -it deploy/matrix-app-template -- register_new_matrix_user -u <YOUR_USER_NAME> -p <YOUR_USER_PASSWORD> -a -k <MATRIX_REG_SECRET> http://localhost:8008

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: matrix
  namespace: messaging
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 15.16.4
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    image:
      repository: matrixdotorg/synapse
      pullPolicy: IfNotPresent
      tag: latest

    nginx:
      repository: nginx
      pullPolicy: IfNotPresent
      tag: latest

    workload:
      main:
        podSpec:
          containers:
            main:
              enabled: true
              env:
                SYNAPSE_SERVER_NAME: matrix.hoth.systems
                SYNAPSE_REPORT_STATS: "yes"
                SYNAPSE_CONFIG_PATH: /config/homeserver.yaml
                POSTGRES_PASSWORD: ${POSTGRES_PASWORD}
            wellknown:
              enabled: true
              imageSelector: nginx
              securityContext:
                runAsNonRoot: false
                runAsUser: 0
                readOnlyRootFilesystem: false
              probes:
                startup:
                  enabled: false
                liveness:
                  enabled: false
                readiness:
                  enabled: false

    service:
      main:
        enabled: true
        ports:
          main:
            protocol: http
            targetPort: 8008  # Synapse listens here by default
            port: 8080        # External cluster port
      wellknown:
        enabled: true
        ports:
          wellknown:
            enabled: true
            protocol: http
            targetPort: 80  
            port: 80        
            targetSelector: wellknown

    cnpg:
      main:
        enabled: true
        user: synapse
        database: synapse
        password: ${POSTGRES_PASWORD}
        cluster:
          storage:
            size: 8Gi

    configmap:
      matrix-config:
        enabled: true
        data:
          # signing_key_path: Used to uniquely identify and sign events from your server - Required
          # macaroon_secret_key: Signs access tokens for internal user auth - Required
          # registration_shared_secret: Needed for shared-secret registration - Required If registering users via CLI or API
          homeserver.yaml: |
            server_name: matrix.hoth.systems
            public_baseurl: https://matrix.hoth.systems/
            pid_file: /data/homeserver.pid
            enable_registration: false
            registration_shared_secret: ${MATRIX_REG_SECRET}
            allow_guest_access: false
            report_stats: true
            signing_key_path: "/data/synapse.signing.key"
            media_store_path: "/data/media_store"
            macaroon_secret_key: ${MATRIX_REG_SECRET}
            admin_contact: mailto:admin@hoth.systems
            turn_uris: 
            - turn:turn.matrix.hoth.systems?transport=udp
            - turn:turn.matrix.hoth.systems?transport=tcp
            turn_shared_secret: ${COLTURN_STATIC_AUTH_SECRET}
            turn_user_lifetime: 86400000
            turn_allow_guests: true
            database:
              name: psycopg2
              args:
                user: synapse
                password: ${POSTGRES_PASWORD}
                database: synapse
                host: matrix-app-template-cnpg-main-rw
                port: 5432
            listeners:
            - port: 8008
              type: http
              tls: false
              proxy_protocol: true
              x_forwarded: true
              resources:
                - names: [client, federation, openid, keys, metrics]
            oidc_providers:
            - idp_id: cloudflare
              idp_name: Cloudflare Access
              enable_registration: true
              issuer: ${MATRIX_SSO_ISSUER}
              client_id: ${MATRIX_SSO_CLIENT_ID}
              client_secret: ${MATRIX_SSO_CLIENT_SECRET}
              authorization_endpoint: ${MATRIX_SSO_AUTH_ENDPOINT}
              token_endpoint: ${MATRIX_SSO_TOKEN_ENDPOINT}
              userinfo_endpoint: ${MATRIX_SSO_USERINFO_ENDPOINT}
              scopes: ["openid", "profile", "email"]
              user_mapping_provider:
                config:
                  display_name_template: "{{`{{ user.name }}`}}"
                  email_template: "{{`{{ user.email }}`}}"
            experimental_features:
              # MSC3266: Room summary API. Used for knocking over federation
              msc3266_enabled: true
              # MSC4222 needed for syncv2 state_after. This allow clients to
              # correctly track the state of the room.
              msc4222_enabled: true

              # The maximum allowed duration by which sent events can be delayed, as
              # per MSC4140.
              max_event_delay_duration: 24h

              rc_message:
                # This needs to match at least e2ee key sharing frequency plus a bit of headroom
                # Note key sharing events are bursty
                per_second: 0.5
                burst_count: 30

              rc_delayed_event_mgmt:
                # This needs to match at least the heart-beat frequency plus a bit of headroom
                # Currently the heart-beat is every 5 seconds which translates into a rate of 0.2s
                per_second: 1
                burst_count: 20
      matrix-wellknown:
        enabled: true
        data:
          client: |
            {
              "m.homeserver": {
                "base_url": "https://matrix.hoth.systems"
              },
              "org.matrix.msc3861.call": {
                "url": "https://call.matrix.hoth.systems"
              },
              "org.matrix.msc3489.turn": {
                "url": "turn:turn.matrix.hoth.systems",
                "username": "placeholder",
                "password": "placeholder"
              }
            }
      matrix-wellknown-nginx:
        enabled: true
        data:
          default.conf: |
            server {
              listen 80;
              location /.well-known/matrix/client {
                default_type application/json;
                add_header Access-Control-Allow-Origin *;
                root /usr/share/nginx/html;
                try_files $uri =404;
              }
            }

    persistence:
      data:
        enabled: true
        type: nfs
        mountPath: /data
        path: ${NFS_MATRIX_DATA}
        server: ${NAS_IP}
      config:
        enabled: true
        type: configmap
        objectName: matrix-config
        mountPath: /config
      wellknown-data:
        enabled: true
        type: configmap
        objectName: matrix-wellknown
        targetSelector:
          main:
            wellknown:
              mountPath: /usr/share/nginx/html/.well-known/matrix
      wellknown-nginx-conf:
        enabled: true
        type: configmap
        objectName: matrix-wellknown-nginx
        targetSelector:
          main:
            wellknown:
              mountPath: /etc/nginx/conf.d

    ingress:
      main:
        enabled: true
        ingressClassName: external
        hosts:
          - host: matrix.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
                targetSelector:
                  main: main
        integrations:
          traefik:
            enabled: false
          certManager:
            enabled: true
            certificateIssuer: "domain-0-le-prod"
      wellknown:
        enabled: true
        ingressClassName: external
        targetSelector:
          wellknown: wellknown
        hosts:
          - host: matrix.${DOMAIN_0}
            paths:
              - path: /.well-known/matrix/client
                pathType: ImplementationSpecific
        integrations:
          traefik:
            enabled: false
          certManager:
            enabled: true
            certificateIssuer: "domain-0-le-prod"