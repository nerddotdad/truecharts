---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: downloaders
spec:
  interval: 15m
  chart:
    spec:
      chart: radarr
      version: 23.15.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/onedr0p/radarr
      pullPolicy: IfNotPresent
      tag: 5.17.2.9580@sha256:32d0e8d46f5619069d88445936670ffbca5a3aab7ed2e94e77a834ed85df81bb
    exportarrImage:
      repository: ghcr.io/onedr0p/exportarr
      pullPolicy: IfNotPresent
      tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    service:
      main:
        ports:
          main:
            port: 7878
      metrics:
        enabled: "{{ .Values.metrics.main.enabled }}"
        type: ClusterIP
        ports:
          metrics:
            enabled: true
            port: 7879
    workload:
      main:
        podSpec:
          containers:
            main:
              probes:
                readiness:
                  enabled: true
                  type: http
                  path: /ping
                liveness:
                  enabled: true
                  type: http
                  path: /ping
                startup:
                  enabled: true
                  type: http
                  path: /ping
              env:
                RADARR__SERVER__PORT: "{{ .Values.service.main.ports.main.port }}"
                # External | Basic | Forms
                RADARR__AUTH__METHOD: ""
                # DisabledForLocalAddresses | Enabled
                RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
                # RADARR__APP__THEME: dark
                # RADARR__APP__INSTANCENAME: Radarr
                # RADARR__LOG__LEVEL: info
                # RADARR__UPDATE__BRANCH: develop
            exportarr:
              enabled: "{{ .Values.metrics.main.enabled }}"
              imageSelector: exportarrImage
              args:
                - radarr
              probes:
                liveness:
                  enabled: true
                  type: http
                  path: /healthz
                  port: "{{ .Values.service.metrics.ports.metrics.port }}"
                readiness:
                  enabled: true
                  type: http
                  path: /healthz
                  port: "{{ .Values.service.metrics.ports.metrics.port }}"
                startup:
                  enabled: true
                  type: http
                  path: /healthz
                  port: "{{ .Values.service.metrics.ports.metrics.port }}"
              env:
                INTERFACE: 0.0.0.0
                PORT: "{{ .Values.service.metrics.ports.metrics.port }}"
                URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
                # additional metrics (slow)
                # ENABLE_ADDITIONAL_METRICS: false
                # enable gathering unknown queue items
                # ENABLE_UNKNOWN_QUEUE_ITEMS: false
                CONFIG: "/config/config.xml"
    portal:
      open:
        enabled: true
    credentials:
      cloudflare_r2:
          type: s3
          url: ${CLOUDFLARE_R2_URL} ## DO NOT TOUCH - THIS IS WORKING
          bucket: ${CLOUDFLARE_R2_BUCKET_PREFIX}-{{ .Chart.Name }}
          accessKey: ${CLOUDFLARE_R2_KEY_ID} ## DO NOT TOUCH - THIS IS WORKING
          secretKey: ${CLOUDFLARE_R2_ACESS_KEY} ## DO NOT TOUCH - THIS IS WORKING
          encrKey: ${CLOUDFLARE_R2_ENCRKEY} ## DO NOT TOUCH - THIS IS WORKING
    persistence:
        config:
            volsync:
                - name: config
                  type: restic
                  credentials: cloudflare_r2
                  dest:
                    enabled: true
                  src:
                    enabled: true
        target: # this is the target location for media
            enabled: true
            type: nfs
            mountPath: /data/media
            path: /mnt/hhd-hc-primary/media/data/media
            server:  ${NAS_IP}
        nzbget-target: # this is the target location for nzbget
            enabled: true
            type: nfs
            mountPath: /config/downloads
            path: /mnt/hhd-hc-primary/media/data/usenet
            server:  ${NAS_IP}
    ingress:
        main:
            enabled: true
            hosts:
                - host: radarr.${DOMAIN_0}
                  paths:
                    - path: /
                      pathType: Prefix
            integrations:
                certManager:
                    enabled: true
                    certificateIssuer: domain-0-le-prod
                traefik:
                    enabled: true
                    entrypoints:
                        - websecure
                homepage:
                    enabled: true
                    name: radarr
                    description: This is a radarr instance
                    group: Media
                    icon: ""
                    widget:
                      type: radarr
                      url: https://radarr.media.svc.cluster.local