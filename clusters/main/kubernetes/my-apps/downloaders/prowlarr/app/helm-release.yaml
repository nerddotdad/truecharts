apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: downloaders
spec:
  interval: 15m
  chart:
    spec:
      chart: prowlarr
      version: 18.10.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 5m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    credentials:
      cloudflare_r2:
          type: s3
          url: ${CLOUDFLARE_R2_URL} ## DO NOT TOUCH - THIS IS WORKING
          bucket: ${CLOUDFLARE_R2_BUCKET_PREFIX}-{{ .Chart.Name }}
          accessKey: ${CLOUDFLARE_R2_KEY_ID} ## DO NOT TOUCH - THIS IS WORKING
          secretKey: ${CLOUDFLARE_R2_ACESS_KEY} ## DO NOT TOUCH - THIS IS WORKING
          encrKey: ${CLOUDFLARE_R2_ENCRKEY} ## DO NOT TOUCH - THIS IS WORKING
    persistence:
        config:
            volsync:
                - name: config
                  type: restic
                  credentials: cloudflare_r2
                  dest:
                    enabled: true
                  src:
                    enabled: true
                    trigger:
                      schedule: 30 0 * * *
    image:
      repository: ghcr.io/onedr0p/prowlarr-develop
      tag: 1.26.1.4844@sha256:dd6ab1a0c8f2d780b990f1034f2da6ffb0b4d3e3ca6042b656f691f06d4c9397
      pullPolicy: IfNotPresent
    exportarrImage:
      repository: ghcr.io/onedr0p/exportarr
      pullPolicy: IfNotPresent
      tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    securityContext:
      container:
        readOnlyRootFilesystem: false
    service:
      main:
        ports:
          main:
            port: 9696
      metrics:
        enabled: "{{ .Values.metrics.main.enabled }}"
        type: ClusterIP
        ports:
          metrics:
            enabled: true
            port: 9697
    workload:
      main:
        podSpec:
          containers:
            main:
              probes:
                liveness:
                  path: /ping
                readiness:
                  path: /ping
                startup:
                  type: tcp
              env:
                PROWLARR__SERVER__PORT: "{{ .Values.service.main.ports.main.port }}"
                # External | Basic | Forms
                PROWLARR__AUTH__METHOD: ""
                # DisabledForLocalAddresses | Enabled
                PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
                # PROWLARR__APP__THEME: dark
                # PROWLARR__APP__INSTANCENAME: Prowlarr
                # PROWLARR__LOG__LEVEL: info
                # PROWLARR__UPDATE__BRANCH: develop
            exportarr:
              enabled: "{{ .Values.metrics.main.enabled }}"
              imageSelector: exportarrImage
              args:
                - prowlarr
              probes:
                liveness:
                  enabled: true
                  type: http
                  path: /healthz
                  port: "{{ .Values.service.metrics.ports.metrics.port }}"
                readiness:
                  enabled: true
                  type: http
                  path: /healthz
                  port: "{{ .Values.service.metrics.ports.metrics.port }}"
                startup:
                  enabled: true
                  type: http
                  path: /healthz
                  port: "{{ .Values.service.metrics.ports.metrics.port }}"
              env:
                INTERFACE: 0.0.0.0
                PORT: "{{ .Values.service.metrics.ports.metrics.port }}"
                URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
                # additional metrics (slow)
                # ENABLE_ADDITIONAL_METRICS: false
                # enable gathering unknown queue items
                # ENABLE_UNKNOWN_QUEUE_ITEMS: false
                # enable backfill of historical metrics
                # PROWLARR__BACKFILL: false
                # Set a date from which to start the backfill
                # PROWLARR__BACKFILL_SINCE_DATE: 1970-01-01
                CONFIG: "/config/config.xml"
    configmap:
      dashboard:
        enabled: true
        labels:
          grafana_dashboard: "1"
        data:
          prowlarr.json: >-
            {{ .Files.Get "dashboard.json" | indent 8 }}
    metrics:
      main:
        enabled: true
        type: "servicemonitor"
        endpoints:
          - port: metrics
            path: /metrics
        targetSelector: metrics
        prometheusRule:
          enabled: false
    portal:
      open:
        enabled: true
    ingress:
        main:
            enabled: true
            hosts:
                - host: prowlarr.${DOMAIN_0}
                  paths:
                    - path: /
                      pathType: Prefix
            integrations:
                certManager:
                    enabled: true
                    certificateIssuer: domain-0-le-prod
                traefik:
                    enabled: true
                    entrypoints:
                        - websecure
                homepage:
                    enabled: true
                    name: prowlarr
                    description: This is a prowlarr instance
                    group: Media
                    icon: ""
                    widget:
                      type: prowlarr
                      url: https://prowlarr.media.svc.cluster.local