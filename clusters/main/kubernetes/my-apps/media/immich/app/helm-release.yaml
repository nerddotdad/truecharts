apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: immich
      version: 17.34.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 10m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/immich-app/immich-server
      tag: v1.123.0@sha256:666ce77995230ff7327da5d285c861895576977237de08564e3c3ddf842877eb
      pullPolicy: IfNotPresent
    mlImage:
      repository: ghcr.io/immich-app/immich-machine-learning
      pullPolicy: IfNotPresent
      tag: v1.124.0@sha256:ca74b8c58e745dda0fa4a3321bfa517dd85fb5b055760bd13dcbbe9dc526c788
    mlCudaImage:
      repository: ghcr.io/immich-app/immich-machine-learning
      pullPolicy: IfNotPresent
      tag: v1.124.0-cuda@sha256:57baafc4011e8b0b5b82abe322f3a8cc6e8d35b4c9bd5fc947c6a2705cce7f20
    mlOpenvinoImage:
      repository: ghcr.io/immich-app/immich-machine-learning
      pullPolicy: IfNotPresent
      tag: v1.124.0-openvino@sha256:589dc8a4b2cddada399cd7dc55425b304ff487b7d1e5097d61c85e5c21c7ba92

    securityContext:
      container:
        readOnlyRootFilesystem: false
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0

    immich:
      enable_ml: true
      mlImageType: mlImage
      log_level: log

    service:
      main:
        # Main service targets the server
        targetSelector: main
        ports:
          main:
            port: 10323
            protocol: http
            targetSelector: main
      microservices:
        enabled: true
        type: ClusterIP
        targetSelector: microservices
        ports:
          microservices:
            enabled: true
            primary: true
            port: 10004
            protocol: http
            targetSelector: microservices
      machinelearning:
        enabled: true
        type: ClusterIP
        targetSelector: machinelearning
        ports:
          machinelearning:
            enabled: true
            primary: true
            port: 10003
            protocol: http
            targetSelector: machinelearning

    persistence:
      mlcache:
        enabled: true
        type: emptyDir
        targetSelector:
          machinelearning:
            machinelearning:
              mountPath: /mlcache
      microcache:
        enabled: true
        type: emptyDir
        targetSelector:
          microservices:
            microservices:
              mountPath: /microcache
      library:
        enabled: true
        type: nfs
        mountPath: /usr/src/app/upload/library/
        path: /mnt/hhd-hc-primary/immich/library/
        server:  ${NAS_IP}
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      uploads:
        enabled: true
        type: nfs
        mountPath: /usr/src/app/upload/upload/
        path: /mnt/hhd-hc-primary/immich/upload/
        server:  ${NAS_IP}
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      backups:
        enabled: true
        type: nfs
        mountPath: /usr/src/app/upload/backups/
        path: /mnt/hhd-hc-primary/immich/backups/
        server:  ${NAS_IP}
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      thumbs:
        enabled: true
        type: nfs
        mountPath: /usr/src/app/upload/thumbs/
        path: /mnt/hhd-hc-primary/immich/thumbs/
        server:  ${NAS_IP}
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      profile:
        enabled: true
        type: nfs
        mountPath: /usr/src/app/upload/profile/
        path: /mnt/hhd-hc-primary/immich/profile/
        server:  ${NAS_IP}
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      video:
        enabled: true
        type: nfs
        mountPath: /usr/src/app/upload/encoded-video/
        path: /mnt/hhd-hc-primary/immich/encoded-video/
        server:  ${NAS_IP}
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}

    cnpg:
      main:
        enabled: true
        user: immich
        database: immich
        type: vectors
        cluster:
          initdb:
            postInitApplicationSQL:
              - CREATE EXTENSION IF NOT EXISTS cube;
              - CREATE EXTENSION IF NOT EXISTS earthdistance;
              - CREATE SCHEMA IF NOT EXISTS vectors;
              - ALTER DATABASE immich SET search_path TO "immich", public, vectors;
              - SET search_path TO "immich", public, vectors;
              - GRANT SELECT ON TABLE pg_vector_index_stat TO PUBLIC;
              - ALTER SCHEMA vectors OWNER TO immich;

    redis:
      enabled: true
      includeCommon: true
      redisUsername: default

    portal:
      open:
        enabled: true

    ingress:
      main:
        enabled: true
        hosts:
          - host: immich.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          certManager:
            enabled: true
            certificateIssuer: "domain-0-le-prod"
          traefik:
            enabled: true
            entrypoints:
              - websecure
          homepage:
            enabled: true
            name: "Immich"
            description: "Immich Instance"
            group: "Family Media"
            widget:
              type: "immich"
              url: https://immich.family-media.svc.cluster.local
              key: "${HP_IMMICH}"
              version: 2