apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: wow
  namespace: gaming
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 14.5.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    image:
      repository: nerddotdad/azerothcore-runtime
      pullPolicy: IfNotPresent
      tag: v0.0.26

    workload:
      main:
        podSpec:
          probes:
            startup:
              enabled: false
              # type: tcp
              # port: 8085
              # initialDelaySeconds: 30
              # periodSeconds: 10
              # failureThreshold: 10
            liveness:
              enabled: false
              # type: tcp
              # port: 8085
              # periodSeconds: 10
              # failureThreshold: 5
            readiness:
              enabled: false
              # type: tcp
              # port: 8085
              # periodSeconds: 10
              # failureThreshold: 3
          containers:
            main:
              enabled: true
              # command:
              #   - sleep
              # args:
              #   - infinity
              env:
                DB_HOST: wow-mysql.gaming.svc.cluster.local
                DB_PORT: 3306
                DB_USER: acore
                ACORE_LOGIN_PASS:
                    secretKeyRef:
                      name: wow-mysql
                      key: mysql-password
                      expandObjectName: false
                ACORE_WORLD_PASS:
                    secretKeyRef:
                      name: wow-mysql
                      key: mysql-password
                      expandObjectName: false
                ACORE_CHARACTERS_PASS:
                    secretKeyRef:
                      name: wow-mysql
                      key: mysql-password
                      expandObjectName: false
          initContainers:
            wait-for-db:
              enabled: true
              type: init
              image: busybox
              command: ['sh', '-c', 'until nc -z wow-mysql.gaming.svc.cluster.local 3306; do echo waiting for db; sleep 2; done;']

          # initContainers:
          #   copy-configs:
          #     enabled: true
          #     type: init
          #     imageSelector: alpineImage
          #     command:
          #       - /bin/sh
          #       - -c
          #       - |
          #         echo "checking files"
          #         cd /azerothcore && ls -ltrhR

    # persistence:
    #   config:
    #     enabled: true
    #     type: configmap
    #     objectName: azerothcore-configmap
    #     mountPath: /azerothcore/build/dist/etc
    #     items:
    #       - key: authserver.conf
    #         path: authserver.conf
    #       - key: worldserver.conf
    #         path: worldserver.conf
    #     targetSelector:
    #       main:
    #         main:
    #           mountPath: /azerothcore/build/dist/etc
    #         copy-configs:
    #           mountPath: /azerothcore/build/dist/etc


      # ac-configmap-vol:
      #   enabled: true
      #   type: configmap
      #   objectName: azerothcore-configmap
      #   mountPath: /tmp/configs
      #   items:
      #     - key: authserver.conf
      #       path: authserver.conf
      #     - key: worldserver.conf
      #       path: worldserver.conf
      #   targetSelector:
      #     main:
      #       copy-configs:
      #         mountPath: /tmp/configs

    # configmap:
    #   azerothcore-configmap:
    #     enabled: true
    #     data:
    #       authserver.conf: ""

    #       worldserver.conf: ""

    service:
      main:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ${WOW_IP}
        ports:
          main:
            enabled: true
            protocol: tcp
            port: 8085
            targetPort: 8085
          auth:
            enabled: true
            protocol: tcp
            port: 3724
            targetPort: 3724

    # mariadb:
    #   enabled: true
    #   includeCommon: true
    #   creds:
    #     auth: acore_auth
    #     characters: acore_characters
    #     world: acore_world

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: wow-mysql
  namespace: gaming
spec:
  interval: 5m
  chart:
    spec:
      chart: mysql
      version: 13.0.0
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  values:
    auth:
      existingSecret: wow-mysql
      existingSecretPasswordKey: mysql-password
      database: "acore_auth" # This is only the primary DB, the rest are created in init
    primary:
      extraInitContainers:
        - name: passinit
          image: bitnami/mysql:8.4
          command:
            - bash
            - -c
            - |
              echo "Waiting for MySQL to be ready..."
              sleep 10
              mysql -u root -p"$MYSQL_ROOT_PASSWORD" <<EOF
              CREATE DATABASE IF NOT EXISTS acore_auth CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
              CREATE DATABASE IF NOT EXISTS acore_world CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
              CREATE DATABASE IF NOT EXISTS acore_characters CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

              CREATE USER IF NOT EXISTS 'acore'@'%' IDENTIFIED BY '${MYSQL_ACORE_PASSWORD}';
              GRANT ALL PRIVILEGES ON acore_auth.* TO 'acore'@'%';
              GRANT ALL PRIVILEGES ON acore_world.* TO 'acore'@'%';
              GRANT ALL PRIVILEGES ON acore_characters.* TO 'acore'@'%';
              FLUSH PRIVILEGES;
              EOF
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wow-mysql
                  key: mysql-root-password

  # values:
  #   configmap:
  #     passinit:
  #       enabled: true
  #       data:
  #         passinit.sql: |
  #           CREATE DATABASE IF NOT EXISTS acore_auth CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
  #           CREATE DATABASE IF NOT EXISTS acore_world CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
  #           CREATE DATABASE IF NOT EXISTS acore_characters CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

  #           CREATE USER 'acore'@'%' IDENTIFIED BY 'PLACEHOLDERPASSWORD';
  #           GRANT ALL PRIVILEGES ON acore_auth.* TO 'acore'@'%';
  #           GRANT ALL PRIVILEGES ON acore_world.* TO 'acore'@'%';
  #           GRANT ALL PRIVILEGES ON acore_characters.* TO 'acore'@'%';
  #           FLUSH PRIVILEGES;
  #   mariadbUsername: "acore"
  #   mariadbDatabase: "wow-mariadb"

---
apiVersion: v1
kind: Secret
metadata:
  name: wow-mysql
  namespace: gaming
type: Opaque
stringData:
  mysql-password: acorepass
  mysql-root-password: rootpass
