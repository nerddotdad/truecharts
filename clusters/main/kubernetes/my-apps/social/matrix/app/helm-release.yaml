### Setup
# Set these in clusterenv.yaml
# I use openssl rand -base64 32 to generate tokens
# NFS_MATRIX_DATA: /mnt/vault/app-configs/matrix/data
# MATRIX_REG_SECRET: RANDOM_TOKEN
# MATRIX_MACAROON_SECRET: RANDOM_TOKEN
# POSTGRES_PASWORD: Password you'd like to use for your postgress db
#
# After successful boot Run the below command to generate your admin user.
# kubectl -n social exec -it deploy/matrix-app-template -- register_new_matrix_user -u <YOUR_USER_NAME> -p <YOUR_USER_PASSWORD> -a -k <MATRIX_REG_SECRET> http://localhost:8008

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: matrix
  namespace: social
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 14.5.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    image:
      repository: matrixdotorg/synapse
      pullPolicy: IfNotPresent
      tag: latest

    workload:
      main:
        podSpec:
          containers:
            main:
              enabled: true
              env:
                SYNAPSE_SERVER_NAME: matrix.hoth.systems
                SYNAPSE_REPORT_STATS: "yes"
                SYNAPSE_CONFIG_PATH: /config/homeserver.yaml
                POSTGRES_PASSWORD: ${POSTGRES_PASWORD}
            # sso:
            #   enabled: true
            #   securityContext:
            #     readOnlyRootFilesystem: false
            #     runAsNonRoot: false
            #     runAsUser: 0
            #     runAsGroup: 0
            #   probes:
            #     startup:
            #       enabled: false
            #     liveness:
            #       enabled: false
            #     readiness:
            #       enabled: false
            #   imageSelector: nginx

    service:
      main:
        enabled: true
        ports:
          main:
            protocol: http
            targetPort: 8008  # Synapse listens here by default
            port: 8080        # External cluster port
      # sso:
      #   enabled: true
      #   ports:
      #     sso:
      #       enabled: true
      #       targetSelector: sso
      #       port: 80
      #       protocol: http
      #       targetPort: 80

    cnpg:
      main:
        enabled: true
        user: synapse
        database: synapse
        password: ${POSTGRES_PASWORD}
        cluster:
          storage:
            size: 8Gi  # or whatever fits your needs

    configmap:
      matrix-config:
        enabled: true
        data:
          # signing_key_path: Used to uniquely identify and sign events from your server - Required
          # macaroon_secret_key: Signs access tokens for internal user auth - Required
          # registration_shared_secret: Needed for shared-secret registration - Required If registering users via CLI or API
          homeserver.yaml: |
            server_name: matrix.hoth.systems
            public_baseurl: https://matrix.hoth.systems/
            pid_file: /data/homeserver.pid
            enable_registration: false
            registration_shared_secret: ${MATRIX_REG_SECRET}
            allow_guest_access: false
            report_stats: true
            signing_key_path: "/data/synapse.signing.key"
            media_store_path: "/data/media_store"
            macaroon_secret_key: ${MATRIX_REG_SECRET}
            database:
              name: psycopg2
              args:
                user: synapse
                password: ${POSTGRES_PASWORD}
                database: synapse
                host: matrix-app-template-cnpg-main-rw
                port: 5432
            listeners:
            - port: 8008
              type: http
              tls: false
              proxy_protocol: true
              x_forwarded: true
              resources:
                - names: [client, federation, openid]
            oidc_providers:
            - idp_id: cloudflare
              idp_name: Cloudflare Access
              enable_registration: true
              issuer: ${MATRIX_SSO_ISSUER}
              client_id: ${MATRIX_SSO_CLIENT_ID}
              client_secret: ${MATRIX_SSO_CLIENT_SECRET}
              authorization_endpoint: ${MATRIX_SSO_AUTH_ENDPOINT}
              token_endpoint: ${MATRIX_SSO_TOKEN_ENDPOINT}
              userinfo_endpoint: ${MATRIX_SSO_USERINFO_ENDPOINT}
              scopes: ["openid", "profile", "email"]
              user_mapping_provider:
                config:
                  display_name_template: "{{`{{ user.name }}`}}"
                  email_template: "{{`{{ user.email }}`}}"
      # matrix-wellknown:
      #   enabled: true
      #   data:
      #     server: |
      #       {
      #         "m.homeserver": {
      #           "base_url": "https://matrix.hoth.systems"
      #         }
      #       }
      #     client: |
      #       {
      #         "m.homeserver": {
      #           "base_url": "https://matrix.hoth.systems"
      #         },
      #         "org.matrix.msc3824.authentication_service": {
      #           "url": "https://sso.matrix.hoth.systems"
      #         }
      #       }

    persistence:
      data:
        enabled: true
        type: nfs
        mountPath: /data
        path: ${NFS_MATRIX_DATA}
        server: ${NAS_IP}
      config:
        enabled: true
        type: configmap
        objectName: matrix-config
        mountPath: /config
      # wellknown-data:
      #   enabled: true
      #   type: configmap
      #   objectName: matrix-wellknown
      #   targetSelector:
      #     main:
      #       sso:
      #         mountPath: /usr/share/nginx/html/.well-known/matrix
      # nginx-cache:
      #   enabled: true
      #   type: emptyDir
      #   targetSelector:
      #     main:
      #       sso:
      #         mountPath: /var/cache/nginx
      # nginx-logs:
      #   enabled: true
      #   type: emptyDir
      #   targetSelector:
      #     main:
      #       sso:
      #         mountPath: /var/log/nginx

    ingress:
      main:
        enabled: true
        ingressClassName: external
        hosts: 
          - host: matrix.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
        integrations:
          traefik:
            enabled: false
          certManager:
            enabled: true
            certificateIssuer: "domain-0-le-prod"
      # sso:
      #   enabled: true
      #   targetSelector:
      #     sso: sso
      #   ingressClassName: external
      #   hosts: 
      #     - host: sso.matrix.${DOMAIN_0}
      #       paths:
      #         - path: /
      #           pathType: Prefix
      #   integrations:
      #     traefik:
      #       enabled: false
      #     certManager:
      #       enabled: true
      #       certificateIssuer: "domain-0-le-prod"
                
    # nginx:
    #   repository: nginx
    #   tag: latest
    #   pullPolicy: IfNotPresent